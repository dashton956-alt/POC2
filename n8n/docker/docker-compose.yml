version: '3.8'

services:
  # n8n Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-network-automation
    restart: unless-stopped
    ports:
      - "5678:5678"
    depends_on:
      - postgres
      - redis
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=secure_password_change_me
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://localhost:5678
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=info
      # Database connection (using PostgreSQL)
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8n_db_password_change_me
      
      # ðŸ¤– AI GitOps Environment Variables
      # NetBox Integration
      - NETBOX_URL=http://localhost:8000
      - NETBOX_TOKEN=f1d858fe37629ad6ccdd0aec82cf5f3be39351d9
      
      # OpenAI Configuration
      - OPENAI_MODEL=gpt-4
      - OPENAI_CREDENTIAL_ID=openai-api-cred
      
      # Default Customer Configuration
      - CUSTOMER_ID=demo-corp
      - CUSTOMER_NAME=Demo Corporation
      
      # GitLab Configuration (optional)
      - GITLAB_URL=https://gitlab.com
      - GITLAB_PROJECT_ID=1
      - GITLAB_TOKEN=change-me-to-your-gitlab-token
      
      # Notification Configuration (optional)
      - SLACK_CREDENTIAL_ID=slack-api-cred
      - EMAIL_CREDENTIAL_ID=smtp-cred
      - NETWORK_TEAM_EMAIL=network@company.com
      - NETWORK_TEAM_LEAD_ID=1
      - SECURITY_REVIEWER_ID=2
      
      # ServiceNow Configuration (optional)
      - SERVICENOW_URL=https://company.service-now.com
      - SERVICENOW_USER=n8n-automation
      - SERVICENOW_PASSWORD=change-me-to-servicenow-password
    volumes:
      - n8n_data:/home/node/.n8n
      - ./ai-gitops:/home/node/ai-gitops:ro
    networks:
      - n8n-network

  # PostgreSQL Database for n8n
  postgres:
    image: postgres:13
    container_name: n8n-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: n8n_db_password_change_me
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - n8n-network

  # Redis for n8n queue management
  redis:
    image: redis:7-alpine
    container_name: n8n-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - n8n-network

  # GitLab CI/CD Runner
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner-network-automation
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - gitlab_runner_config:/etc/gitlab-runner
      - gitlab_runner_data:/home/gitlab-runner
      # Mount AI GitOps files for pipeline access
      - ./ai-gitops:/opt/ai-gitops:ro
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    networks:
      - n8n-network
      - gitlab-network

  # GitLab CI/CD Pipeline Executor (Ansible-ready)
  ansible-runner:
    build:
      context: .
      dockerfile: Dockerfile.ansible
    container_name: ansible-pipeline-executor
    restart: "no"  # Only runs when triggered
    volumes:
      - ./ai-gitops:/opt/ai-gitops:ro
      - ansible_playbooks:/opt/playbooks
      - ansible_inventories:/opt/inventories
      - network_backups:/opt/backups
      - ~/.ssh:/root/.ssh:ro  # For network device access
    environment:
      - ANSIBLE_HOST_KEY_CHECKING=False
      - ANSIBLE_STDOUT_CALLBACK=yaml
      - ANSIBLE_RETRY_FILES_ENABLED=False
    networks:
      - n8n-network
      - gitlab-network

  # Monitoring Stack
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-n8n
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - n8n-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-n8n
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_change_me
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - n8n-network

networks:
  n8n-network:
    driver: bridge
  gitlab-network:
    driver: bridge

volumes:
  n8n_data:
  postgres_data:
  redis_data:
  gitlab_runner_config:
  gitlab_runner_data:
  ansible_playbooks:
  ansible_inventories:
  network_backups:
  prometheus_data:
  grafana_data:
